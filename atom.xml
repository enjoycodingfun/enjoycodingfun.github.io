<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Running</title>
  <icon>https://www.gravatar.com/avatar/4d4a481fd290e237dedc9f93763f8130</icon>
  <subtitle>Better Late Than Never</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://enjoycodingfun.github.io/"/>
  <updated>2020-03-06T05:27:29.108Z</updated>
  <id>https://enjoycodingfun.github.io/</id>
  
  <author>
    <name>enjoycodingfun</name>
    <email>17364562230@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx笔记0</title>
    <link href="https://enjoycodingfun.github.io/2020/03/06/Nginx%E7%AC%94%E8%AE%B00/"/>
    <id>https://enjoycodingfun.github.io/2020/03/06/Nginx%E7%AC%94%E8%AE%B00/</id>
    <published>2020-03-06T05:27:29.108Z</published>
    <updated>2020-03-06T05:27:29.108Z</updated>
    
    <content type="html"><![CDATA[<p>主题词: 负载均衡</p><ol><li>什么是负载均衡 </li></ol><blockquote><p>负载均衡，英文名称为Load Balance，其意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完成工作任务。</p></blockquote><blockquote><p>负载均衡是建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。</p></blockquote><ol start="2"><li>软件级负载均衡</li></ol><blockquote><p>常见的硬件有比较昂贵的NetScaler、F5、Radware和Array等商用的负载均衡器，它的优点就是有专业的维护团队来对这些服务进行维护、缺点就是花销太大</p></blockquote><blockquote><p>LVS/HAProxy、Nginx的基于Linux的开源免费的负载均衡软件策略,这些都是通过软件级别来实现，所以费用非常低廉，所以推荐大家采用第二种方案来实施自己网站的负载均衡需求</p></blockquote><blockquote><p>参见：<a href="http://network.51cto.com/art/201110/298992.htm" target="_blank" rel="noopener">http://network.51cto.com/art/201110/298992.htm</a></p></blockquote><ol start="3"><li>Nginx是什么？</li></ol><blockquote><p>Nginx (engine x) 是一款轻量级的高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点开发的。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。</p></blockquote><blockquote><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受互联网上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给互联网上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p></blockquote><blockquote><p>正向代理隐藏了访问者的IP等信息（服务器端–代理服务器端–客户端）</p></blockquote><blockquote><p>反向代理隐藏了被访问者的IP等信息（客户端–代理服务器端–服务器端）</p></blockquote><ol start="4"><li>Nginx的应用场景</li></ol><ul><li><p>HTTP服务器：可以独立提供HTTP服务器，可以做网页静态服务器。如：图片服务器</p></li><li><p>虚拟主机：可以实现在一台服务器虚拟出多个网站，例如个人网站使用的虚拟主机</p></li><li><p>反向代理：当网站的访问量上升，单台服务器不能满足用户的请求时，需要用多台服务器集群，可以使用Nginx做反向代理   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/payForApp"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseInfo <span class="title">payForApp</span><span class="params">(@Valid PayParamDTO paramDTO, BindingResult bindingResult)</span> </span>&#123;</span><br><span class="line">        MemberTokenDto memberTokenDto = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(paramDTO.getSessionId())) &#123;</span><br><span class="line">            memberTokenDto = memberApi.getMemberToken(paramDTO.getSessionId());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == memberTokenDto) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GlobalException(PaymentExceptionEnum.FAILED_TO_BUILD_PREPPAY_SIGN);</span><br><span class="line">        &#125;</span><br><span class="line">        BindResultUtil.dealBindResult(bindingResult);</span><br><span class="line">        paramDTO.setIp(ServletRequestUtil.getIpAddress(request));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseInfo(alipayService.buildPaySignForApp(memberTokenDto.getMemberId(), paramDTO));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>负载均衡：多台服务器平均分担负载，不会因为某台服务器负载高而宕机，某台服务器闲置等情况</p><p><img src="https://raw.githubusercontent.com/enjoycodingfun/enjoycodingfun.github.io/master/img/head.jpg" alt="功夫熊猫"></p><p><img src="http://116.62.66.183:4000/img/alipay.jpg" alt="支付宝"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主题词: 负载均衡&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么是负载均衡 &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;负载均衡，英文名称为Load Balance，其意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://enjoycodingfun.github.io/categories/Nginx/"/>
    
    
      <category term="nginx" scheme="https://enjoycodingfun.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>妈妈购JAVA开发代码规范 (2)</title>
    <link href="https://enjoycodingfun.github.io/2020/03/02/%E5%A6%88%E5%A6%88%E8%B4%ADJAVA%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%20(2)/"/>
    <id>https://enjoycodingfun.github.io/2020/03/02/%E5%A6%88%E5%A6%88%E8%B4%ADJAVA%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%20(2)/</id>
    <published>2020-03-02T06:36:24.934Z</published>
    <updated>2020-03-02T06:36:24.934Z</updated>
    
    <content type="html"><![CDATA[<h1 id="妈妈购JAVA开发代码规范"><a href="#妈妈购JAVA开发代码规范" class="headerlink" title="妈妈购JAVA开发代码规范"></a>妈妈购JAVA开发代码规范</h1><h3 id="1-强制约束"><a href="#1-强制约束" class="headerlink" title="1.强制约束"></a>1.强制约束</h3><p><strong>(1)实体类或DTO等中涉及到type或state的类型需要在Javadoc中注释中标明所有的已知枚举值，同时指明引用的Constant或者Enum类。</strong></p><p>示例：<br><code>/**</code><br><code>* 售后状态，其他描述....</code><br><code>*</code><br><code>* @see RefundOrderStateEnum 常量类引用</code><br><code>* @see OrderServiceApiImpl</code><br><code>*/</code><br><code>private Integer refundState;</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/567900/1573210104459-a1ec6f20-a4e6-487b-ab3b-92814cdbc445.png#align=left&display=inline&height=330&name=image.png&originHeight=330&originWidth=653&size=156927&status=done&style=none&width=653" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p><strong>(2)实体类或DTO等中涉及到其他表的字段，</strong><br><strong>①外键，命名为实体名 + Id （如：OrderEntity 其他的外键为 orderId）</strong><br>**<br>②冗余字段，命名为与原表字段保持一致，存在重复使用实体名+字段名，需要写出冗余数据同步机制**<br>**<br>必须注释中标明是那张表的主键或冗余字段**</p><p>/**</p><ul><li>会员Id</li><li>会员表主键：t_mem_member</li><li>会员表冗余字段：t_mem_member （同步方法：原表数据变化时及时更新当前表数据， 定时同步）</li><li>/<br>private Long memberId;</li></ul><p><strong>(3)if-elseif 中涉及到 三个及以上的判断条件时， 需要标明注释和条件换行</strong><br>**<br><strong><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208450478-85ad67c2-08d3-4ab0-a87c-3ceb7d240a91.png#align=left&display=inline&height=167&name=image.png&originHeight=171&originWidth=691&size=66279&status=done&style=none&width=674" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure></strong></p><p>(4)<strong>新设计的数据库表，必须包含以下字段：（hiddenMemo、creatorId、createdTime、lastModifierId、lastModifiedTime、deletedFlag、version），<br>所有对实体表的查询必须限制deletedFlag=0 为条件</strong><br><strong>hiddenMemo在代码中不使用，只用于订数据备注。</strong></p><p><strong>(5)Lambad表达式禁止超过3个表达式，如果超出需要分成多段</strong>， 建议在项目不使用Lambad表达式</p><p>(6)一个方法中的代码行数不得多于200行，如超出需要进行封装私有方法，所有在调用该私有方法出需要写明注释该方法的用处，同时需要使用this.进行调用</p><p>(7)未被调用的private field 和private method必须删除。</p><p>(8)禁止在循环或递归中调用接口（Dao、service、api等）</p><p><strong>(9)禁止使用魔法值，统一定义为枚举或者常量类</strong></p><p>(10)全项目禁止出现System.out.print()，统一使用log</p><p>(11)SelectList &amp; selectCount（即EntityWrapper）的不允许出现在service中，需要通过repository进行中转一下</p><p>(12)reponse返回前端时不允许出现宽泛的单词，”Id”、“name”最为典型，必须使用业务对象+id，如：itemId、memberId。</p><p>也不允许多种定义规则如：商品Id，使用itemId、goodsId、productId等，统一为itemId。</p><h3 id="2-参数命名约束"><a href="#2-参数命名约束" class="headerlink" title="2.参数命名约束"></a>2.参数命名约束</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/jpeg/123079/1573637524500-88ecf5cc-02dd-4aa3-9f10-09aeab180b0c.jpeg#align=left&display=inline&height=2295&name=%E5%8C%85%E7%BB%93%E6%9E%84%E8%A7%84%E8%8C%83.jpg&originHeight=2295&originWidth=2085&size=463020&status=done&style=none&width=2085" alt="包结构规范.jpg" title="">                </div>                <div class="image-caption">包结构规范.jpg</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/jpeg/123079/1573637546762-7ff5e2ff-1d60-45bf-8bba-3d98ca4ae56d.jpeg#align=left&display=inline&height=1008&name=%E5%8D%95%E4%BD%93%E6%9C%8D%E5%8A%A1%E7%B1%BB%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg&originHeight=1008&originWidth=1004&size=51437&status=done&style=none&width=1004" alt="单体服务类调用关系图.jpg" title="">                </div>                <div class="image-caption">单体服务类调用关系图.jpg</div>            </figure><h3 id="3-URL命名约束"><a href="#3-URL命名约束" class="headerlink" title="3.URL命名约束"></a>3.URL命名约束</h3><h3 id="4-注释约束"><a href="#4-注释约束" class="headerlink" title="4.注释约束"></a>4.注释约束</h3><p>(1)类注释（Javadoc）</p><p>每个类必须类注释<br>可以不写作者名和日期，因为Git已经记录下了这些信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208581363-7b0a09d2-a167-488a-835d-99b8c129d3c2.png#align=left&display=inline&height=134&name=image.png&originHeight=110&originWidth=598&size=27711&status=done&style=none&width=731" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>(2)方法级注释（Javadoc）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208605114-227c1b9c-93db-4efc-ad4c-087085d9bc76.png#align=left&display=inline&height=237&name=image.png&originHeight=101&originWidth=311&size=18075&status=done&style=none&width=731" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>方法名含义明确的话，可以不写方法注释<br>打算说明参数、返回值、异常的含义时，必须用tag注解；当参数或是返回值的含义比较明确时，也可以不写tag，但禁止出现下图那样多余的写法</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208706788-04d47f3f-4d25-4915-9aa2-8f9f108ba11b.png#align=left&display=inline&height=236&name=image.png&originHeight=145&originWidth=287&size=50916&status=done&style=none&width=468" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>注意tag的用法<br><a href="">@param </a> 形参名 注释<br><a href="">@return </a> 注释<br><a href="">@throws </a> 异常类型 注释</p><p>(3)字段注释（Javadoc）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208765035-50850b82-dc55-4af7-a774-aed4cb475e77.png#align=left&display=inline&height=160&name=image.png&originHeight=83&originWidth=192&size=8880&status=done&style=none&width=369" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>单词含义明确的话，可以不写字段注释<br>必须使用/** */，禁止使用 //，禁止使用 /_ _/</p><h3 id="5-数据库规范"><a href="#5-数据库规范" class="headerlink" title="5.数据库规范"></a>5.数据库规范</h3><p>（1）主键 </p><ul><li>主键必须使用 bigint  </li><li>不能使用 unsigned ，不能使用无符号，因为 Long 类型的容量不足以支撑 unsigned bigint, 同理 使用 unsigned int 也不能使用 Integer 映射</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;妈妈购JAVA开发代码规范&quot;&gt;&lt;a href=&quot;#妈妈购JAVA开发代码规范&quot; class=&quot;headerlink&quot; title=&quot;妈妈购JAVA开发代码规范&quot;&gt;&lt;/a&gt;妈妈购JAVA开发代码规范&lt;/h1&gt;&lt;h3 id=&quot;1-强制约束&quot;&gt;&lt;a href=&quot;#1-强
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>妈妈购JAVA开发代码规范</title>
    <link href="https://enjoycodingfun.github.io/2020/03/02/%E5%A6%88%E5%A6%88%E8%B4%ADJAVA%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <id>https://enjoycodingfun.github.io/2020/03/02/%E5%A6%88%E5%A6%88%E8%B4%ADJAVA%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</id>
    <published>2020-03-02T06:27:57.170Z</published>
    <updated>2020-03-02T06:27:57.170Z</updated>
    
    <content type="html"><![CDATA[<h1 id="妈妈购JAVA开发代码规范"><a href="#妈妈购JAVA开发代码规范" class="headerlink" title="妈妈购JAVA开发代码规范"></a>妈妈购JAVA开发代码规范</h1><p><a name="cTEQY"></a></p><h3 id="1-强制约束"><a href="#1-强制约束" class="headerlink" title="1.强制约束"></a>1.强制约束</h3><p><strong>(1)实体类或DTO等中涉及到type或state的类型需要在Javadoc中注释中标明所有的已知枚举值，同时指明引用的Constant或者Enum类。</strong></p><p>示例：<br /><code>/**</code><br /><code>* 售后状态，其他描述....</code><br /><code>*</code><br /><code>* @see RefundOrderStateEnum 常量类引用</code><br /><code>* @see OrderServiceApiImpl</code><br /><code>*/</code><br /><code>private Integer refundState;</code><br /><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/567900/1573210104459-a1ec6f20-a4e6-487b-ab3b-92814cdbc445.png#align=left&display=inline&height=330&name=image.png&originHeight=330&originWidth=653&size=156927&status=done&style=none&width=653" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure></p><p><strong>(2)实体类或DTO等中涉及到其他表的字段，</strong><br /><strong>①外键，命名为实体名 + Id （如：OrderEntity 其他的外键为 orderId）</strong><br />**<br>②冗余字段，命名为与原表字段保持一致，存在重复使用实体名+字段名，需要写出冗余数据同步机制<strong><br /></strong><br>必须注释中标明是那张表的主键或冗余字段**</p><p>/<em>*<br /></em> 会员Id<br />* 会员表主键：t_mem_member<br />* 会员表冗余字段：t_mem_member （同步方法：原表数据变化时及时更新当前表数据， 定时同步）<br />*/<br />private Long memberId;</p><p><strong>(3)if-elseif 中涉及到 三个及以上的判断条件时， 需要标明注释和条件换行</strong><br /><strong><br /></strong><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208450478-85ad67c2-08d3-4ab0-a87c-3ceb7d240a91.png#align=left&display=inline&height=167&name=image.png&originHeight=171&originWidth=691&size=66279&status=done&style=none&width=674" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure>**</p><p>(4)<strong>新设计的数据库表，必须包含以下字段：（hiddenMemo、creatorId、createdTime、lastModifierId、lastModifiedTime、deletedFlag、version），<br>所有对实体表的查询必须限制deletedFlag=0 为条件</strong><br /><strong>hiddenMemo在代码中不使用，只用于订数据备注。</strong></p><p><strong>(5)Lambad表达式禁止超过3个表达式，如果超出需要分成多段</strong>， 建议在项目不使用Lambad表达式</p><p>(6)一个方法中的代码行数不得多于200行，如超出需要进行封装私有方法，所有在调用该私有方法出需要写明注释该方法的用处，同时需要使用this.进行调用</p><p>(7)未被调用的private field 和private method必须删除。</p><p>(8)禁止在循环或递归中调用接口（Dao、service、api等）</p><p><strong>(9)禁止使用魔法值，统一定义为枚举或者常量类</strong></p><p>(10)全项目禁止出现System.out.print()，统一使用log</p><p>(11)SelectList &amp; selectCount（即EntityWrapper）的不允许出现在service中，需要通过repository进行中转一下</p><p>(12)reponse返回前端时不允许出现宽泛的单词，”Id”、“name”最为典型，必须使用业务对象+id，如：itemId、memberId。</p><p>也不允许多种定义规则如：商品Id，使用itemId、goodsId、productId等，统一为itemId。</p><p><a name="jSbxB"></a></p><h3 id="2-参数命名约束"><a href="#2-参数命名约束" class="headerlink" title="2.参数命名约束"></a>2.参数命名约束</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/jpeg/123079/1573637546762-7ff5e2ff-1d60-45bf-8bba-3d98ca4ae56d.jpeg#align=left&display=inline&height=1008&name=%E5%8D%95%E4%BD%93%E6%9C%8D%E5%8A%A1%E7%B1%BB%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg&originHeight=1008&originWidth=1004&size=51437&status=done&style=none&width=1004" alt="包结构规范.jpg](https://cdn.nlark.com/yuque/0/2019/jpeg/123079/1573637524500-88ecf5cc-02dd-4aa3-9f10-09aeab180b0c.jpeg#align=left&display=inline&height=2295&name=%E5%8C%85%E7%BB%93%E6%9E%84%E8%A7%84%E8%8C%83.jpg&originHeight=2295&originWidth=2085&size=463020&status=done&style=none&width=2085)<br />![单体服务类调用关系图.jpg" title="">                </div>                <div class="image-caption">包结构规范.jpg](https://cdn.nlark.com/yuque/0/2019/jpeg/123079/1573637524500-88ecf5cc-02dd-4aa3-9f10-09aeab180b0c.jpeg#align=left&display=inline&height=2295&name=%E5%8C%85%E7%BB%93%E6%9E%84%E8%A7%84%E8%8C%83.jpg&originHeight=2295&originWidth=2085&size=463020&status=done&style=none&width=2085)<br />![单体服务类调用关系图.jpg</div>            </figure><p><a name="5sq7P"></a></p><h3 id="3-URL命名约束"><a href="#3-URL命名约束" class="headerlink" title="3.URL命名约束"></a>3.URL命名约束</h3><p><a name="X1DeE"></a></p><h3 id="4-注释约束"><a href="#4-注释约束" class="headerlink" title="4.注释约束"></a>4.注释约束</h3><p>(1)类注释（Javadoc）</p><p>每个类必须类注释<br />可以不写作者名和日期，因为Git已经记录下了这些信息<br /><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208581363-7b0a09d2-a167-488a-835d-99b8c129d3c2.png#align=left&display=inline&height=134&name=image.png&originHeight=110&originWidth=598&size=27711&status=done&style=none&width=731" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure></p><p>(2)方法级注释（Javadoc）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208605114-227c1b9c-93db-4efc-ad4c-087085d9bc76.png#align=left&display=inline&height=237&name=image.png&originHeight=101&originWidth=311&size=18075&status=done&style=none&width=731" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>方法名含义明确的话，可以不写方法注释        <br />打算说明参数、返回值、异常的含义时，必须用tag注解；当参数或是返回值的含义比较明确时，也可以不写tag，但禁止出现下图那样多余的写法</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208706788-04d47f3f-4d25-4915-9aa2-8f9f108ba11b.png#align=left&display=inline&height=236&name=image.png&originHeight=145&originWidth=287&size=50916&status=done&style=none&width=468" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>注意tag的用法<br /><a href="">@param </a> 形参名 注释<br /><a href="">@return </a> 注释<br /><a href="">@throws </a> 异常类型 注释</p><p>(3)字段注释（Javadoc）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2019/png/165526/1573208765035-50850b82-dc55-4af7-a774-aed4cb475e77.png#align=left&display=inline&height=160&name=image.png&originHeight=83&originWidth=192&size=8880&status=done&style=none&width=369" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p>单词含义明确的话，可以不写字段注释                                        <br />必须使用/** */，禁止使用 //，禁止使用 /_ _/</p><p><a name="UkXGo"></a></p><h3 id="5-数据库规范"><a href="#5-数据库规范" class="headerlink" title="5.数据库规范"></a>5.数据库规范</h3><p>（1）主键 </p><ul><li>主键必须使用 bigint  </li><li>不能使用 unsigned ，不能使用无符号，因为 Long 类型的容量不足以支撑 unsigned bigint, 同理 使用 unsigned int 也不能使用 Integer 映射</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;妈妈购JAVA开发代码规范&quot;&gt;&lt;a href=&quot;#妈妈购JAVA开发代码规范&quot; class=&quot;headerlink&quot; title=&quot;妈妈购JAVA开发代码规范&quot;&gt;&lt;/a&gt;妈妈购JAVA开发代码规范&lt;/h1&gt;&lt;p&gt;&lt;a name=&quot;cTEQY&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Nginx笔记2</title>
    <link href="https://enjoycodingfun.github.io/2020/03/02/Nginx%E7%AC%94%E8%AE%B02/"/>
    <id>https://enjoycodingfun.github.io/2020/03/02/Nginx%E7%AC%94%E8%AE%B02/</id>
    <published>2020-03-02T04:51:17.620Z</published>
    <updated>2020-03-02T04:51:17.620Z</updated>
    
    <content type="html"><![CDATA[<h5 id="主题词-高并发下Nginx反向代理、Nginx负载均衡"><a href="#主题词-高并发下Nginx反向代理、Nginx负载均衡" class="headerlink" title="主题词: 高并发下Nginx反向代理、Nginx负载均衡"></a>主题词: 高并发下Nginx反向代理、Nginx负载均衡</h5><ul><li>需求：配置Nginx的反向代理 </li></ul><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2017/09/10/59b5253f6bd3e.jpg" alt="fxdl.jpg](https://i.loli.net/2017/09/10/59b5253f6bd3e.jpg)" title="">                </div>                <div class="image-caption">fxdl.jpg](https://i.loli.net/2017/09/10/59b5253f6bd3e.jpg)</div>            </figure></p><ol><li><p>配置两台Tomcat服务器</p><ul><li>配置两台Tomcat的端口分别是8087和8088</li><li>保证两台Tomcat服务器的三处端口不一致才能启动</li><li>启动8087端口打开Tomcat7，启动8088端口打开Tomcat8</li></ul></li><li><p>配置Nginx反向代理服务器</p><ul><li>修改配置文件</li><li>修改配置文件注意点<ul><li>定义upstream tomcat7内的server需指向反向代理指向的服务器地址，分号结束不能忘。</li><li>定义location的proxy_pass为<a href="http://tomcat7，对应upstream的名称。" target="_blank" rel="noopener">http://tomcat7，对应upstream的名称。</a></li></ul></li></ul></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">upstream manager&#123;</span><br><span class="line">server 192.168.31.159:8087;</span><br><span class="line">   &#125;</span><br><span class="line">   server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  manager.dhc.com;</span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            proxy_pass   http:&#x2F;&#x2F;manager;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    upstream portal&#123;</span><br><span class="line">server 192.168.31.159:8088;</span><br><span class="line">   &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  portal.dhc.com;</span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            proxy_pass   http:&#x2F;&#x2F;portal;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>重启并加载配置文件，并测试是否成功</li></ol><ul><li>需求：配置Nginx的负载均衡</li></ul><ol><li>配置文件的修改，其他同上个需求</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream portal&#123;</span><br><span class="line">server 192.168.31.159:8087 weight&#x3D;2;</span><br><span class="line">server 192.168.31.159:8088;</span><br><span class="line">   &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  portal.dhc.com;</span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            proxy_pass   http:&#x2F;&#x2F;portal;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>可以在upstream中配置权重weight=2（轮询）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;主题词-高并发下Nginx反向代理、Nginx负载均衡&quot;&gt;&lt;a href=&quot;#主题词-高并发下Nginx反向代理、Nginx负载均衡&quot; class=&quot;headerlink&quot; title=&quot;主题词: 高并发下Nginx反向代理、Nginx负载均衡&quot;&gt;&lt;/a&gt;主题词:
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://enjoycodingfun.github.io/2020/03/02/test/"/>
    <id>https://enjoycodingfun.github.io/2020/03/02/test/</id>
    <published>2020-03-02T04:40:34.000Z</published>
    <updated>2020-03-02T04:40:34.300Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://enjoycodingfun.github.io/2020/01/19/hello-world/"/>
    <id>https://enjoycodingfun.github.io/2020/01/19/hello-world/</id>
    <published>2020-01-19T02:41:36.386Z</published>
    <updated>2020-01-19T02:41:36.386Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
